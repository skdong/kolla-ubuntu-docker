FROM {{ namespace }}/{{ image_prefix }}openstack-base:{{ tag }}
LABEL maintainer="{{ maintainer }}" name="{{ image_name }}" build-date="{{ build_date }}"

{% block glance_base_header %}{% endblock %}

{% import "macros.j2" as macros with context %}

{{ macros.configure_user(name='glance') }}

{% if install_type == 'binary' %}
    {% if base_package_type == 'rpm' %}
        {% set glance_base_packages = [
            'openstack-glance'
        ] %}
        {% if distro_python_version.startswith('3') %}
        {% set glance_base_packages = glance_base_packages + [
            'python3-oslo-vmware',
            'python3-rados',
            'python3-rbd'
        ] %}
        {% else %}
        {% set glance_base_packages = glance_base_packages + [
            'python-oslo-vmware',
            'python-rados',
            'python-rbd'
        ] %}
        {% endif %}
    {% elif base_package_type == 'deb' %}
        {% set glance_base_packages = [
            'glance',
            'python-os-brick',
            'python-oslo.vmware',
            'python-rados',
            'python-rbd'
        ] %}
    {% endif %}

{{ macros.install_packages(glance_base_packages | customizable("packages")) }}

{% elif install_type == 'source' %}
    {% set glance_base_packages = [
        'python-rados',
        'python-rbd'
    ] %}

{{ macros.install_packages(glance_base_packages | customizable("packages")) }}

ADD glance-base-archive /glance-base-source

{% set glance_base_pip_packages = [
    '/glance',
    'glance_store[cinder,vmware,swift]'
] %}

RUN ln -s glance-base-source/* glance \
    && {{ macros.install_pip(glance_base_pip_packages | customizable("pip_packages")) }} \
    && mkdir -p /etc/glance \
    && cp -r /glance/etc/* /etc/glance/ \
    && chown -R glance: /etc/glance

{% endif %}

COPY extend_start.sh /usr/local/bin/kolla_extend_start

RUN touch /usr/local/bin/kolla_glance_extend_start \
    && chmod 755 /usr/local/bin/kolla_extend_start /usr/local/bin/kolla_glance_extend_start

{% block glance_base_footer %}{% endblock %}
